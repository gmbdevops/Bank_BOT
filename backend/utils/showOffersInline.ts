import path from 'path'
import { MyContext } from '../types/context'
import { Offer } from '../types/types'
import { getOffersWithMenuKeyboard } from '../keyboards/mainMenu'
import { ensureReplyMenu } from './ensureReplyMenu'

function getCategoryImage(category: 'ua' | 'world' | 'crypto') {
  const images = {
    ua: 'ukraine.png',
    world: 'world.png',
    crypto: 'crypto.png'
  }

  return images[category] || ''
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç inline-–ø–µ—Ä–µ—á–µ–Ω—å –æ—Ñ—Ñ–µ—Ä–æ–≤ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
 * –í–∫–ª—é—á–∞–µ—Ç:
 * - reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
 * - —à–∞–ø–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)
 * - –æ—Ñ—Ñ–µ—Ä—ã —á–µ—Ä–µ–∑ inline-–∫–Ω–æ–ø–∫–∏
 */
export async function showOffersInline(
  ctx: MyContext,
  offers: Offer[],
  category: 'ua' | 'world' | 'crypto'
) {
  if (offers.length === 0) {
    await ctx.reply('üòî –í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç –æ—Ñ—Ñ–µ—Ä–æ–≤.')
    return await ensureReplyMenu(ctx, category)
  }

  await ensureReplyMenu(ctx, category)

  const imagePath = path.resolve(__dirname, '../img', getCategoryImage(category))
  await ctx.replyWithPhoto({ source: imagePath })

  await ctx.reply(`üìã –û—Ñ—Ñ–µ—Ä—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ *${category.toUpperCase()}*:`, {
    reply_markup: getOffersWithMenuKeyboard(offers),
    parse_mode: 'Markdown'
  })
}